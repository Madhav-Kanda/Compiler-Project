// saatvik rao

// input list 
var inp = [10,9,2,5,3,7,101,18];

// dp array
var dp = [];
for (int i = 0; i < length(inp); i = i + 1) {
    append(dp, 1); 
}

// previous element array 
var prev = [];
for (int i = 0; i < length(inp); i = i + 1) {
    append(prev, -1); 
}

int maxInd = 0;

for (int i = 1; i < length(inp); i = i + 1){
    for (int j = 0; j < i; j = j + 1) {
        if (access(inp, i) > access(inp, j) and access(dp, i) < access(dp, j) + 1) {
            assign(dp, i, access(dp, j) + 1); 
            assign(prev, i, j); 
        }

        if (access(dp, i) > access(dp, maxInd)) {
            maxInd = i; 
        }
    }
}

// output array
var out = [];

while (maxInd >= 0) {
    append(out, access(inp, maxInd));
    maxInd = access(prev, maxInd); 
}

var rev_out = [];

for (int i = length(out) - 1; i >= 0; i = i - 1) {
    append(rev_out, access(out, i)); 
}

print("OUTPUT:");

print("------------------------------------");

print("Length of longest increasing subsequence: ");
print(length(rev_out));

print("Longest Increasing Subsequence: ");
print(rev_out);

print("------------------------------------");